O QUE É UNRESTRICTED FILE UPLOAD E COMO FUNCIONA? -> Basicamente, em uma aplicação em que existe a possibilidadede se fazer upload de um arquivo, não existe restrição no tipo e no formato de arquivo que você pode fazer upload. Isso é chamado de Unrestrict file upload e pode ser uma vulnerabilidade para as aplicações pois podemos por exemplo, em uma aplicação trocar nosso avatar, e o sistema não válida a entrada do arquivo (.php, .js, .apx e etc) e dependendo de como está funcionando e validando os arquivos no backend, o script injetado pode vir a funcionar e executar nosso código. Esse tipo de vulnerabilidade ocorre em aplicações em que podemos enviar algum tipo de arquivo para o servidor. Essa vulnerabilidade pode ser perigosa pois com uma simples payload em php podemos explorar o servidor e visualizar seu conteudo, podemos também iniciar um shell reversa para conseguirmos acesso remoto ao servidor.
------------------------------------------------------------------------------------
COMO EXPLORAR ESSA VULNERABILIDADE? -> Para explorarmos essa vulnerabilidade, devemos primeiro enviar alguns arquivos ao servidor para testar, podemos começar enviando um arquivo que o servidor já está esperando, como uma imagem, um documento, dependendo do tipo da aplicação. Após isso, devemos dar uma olhada para onde o arquivo foi dentro do servidor, ou seja, procurar (pode ser pelo inspecionar elemento, ou também podemos acompanhar a requisição utilizando o debugger de rede) o diretorio que ficam os arquivos enviados. No caso do nosso lab, os arquivos enviados ficam em http://10.10.0.16/uploads/cryptopunks.jpg e não temos um directory listen, ou seja, não podemos listar arquivos do servidor, mas podemos ter acesso ao nosso arquivo enviado pegando o nome dele e passando como endereço, ou também podemos acompanhar o arquivo ao recarregarmos a página pelo DevTools e ao clicarmos nele ele será aberto. Podemos utilizar a seguinte payload php para explorarmos essa vulnerabilidade:

<?php
system($_GET['cmd']);
?>

Dessa forma o comando executado dentro do servidor irá interpretar tudo que enviarmos via GET (URL) pelo parametro cmd, fazendo assim um Remote code execution e que podemos começar até mesmo uma shell reversa. Hoje em dia os frameworks podem barrar esse tipo de vulnerabilidade, então ela não é comum de ocorrer, porém tem diversos modos para fazermos o bypass dessas vulnerabilidades e enviar códigos dentro de imagens ou de algum tipo de arquivo no formato suportado.
