O QUE É LFI E COMO OCORRE ESSA VULNERABILIDADE? -> Essa vulnerabilidade praticamente permite que um atacante leia arquivos dentro de um servidor alvo, ou de uma aplicação ou do sistema que possua essa vulnerabilidade, ela basicamente permite que você inclua arquivos dentro do servidor ou os leia. No php existe uma função que se chama file_get_contents() e essa função serve para pegarmo o conteudo de um arquivo. No nosso exemplo, se tentarmos redirecionar o site para o arquivo etc/passwd, não iremos conseguir pois nó código o arquivo já começa no /pages, então ao tentarmos forçar a aplicação a ir até o arquivo, na verdade estariamos tentando acessar a pasta /pages/etc/passwd. Para fazermos isso, podemos utilizar uma técnica chamada de path traversal, que se trata de basicamente voltar alguns diretorios, Um exemplo e path traversal é  utilizarmos ../ que é um comando utilizado para voltar um diretorio. A quantidade de ../ é medida pela quantidade de pastas que devemos voltar para acessar a raiz do sistema. No caso do nosso exemplo, o link ficaria da seguinte maneira: http://localhost:8081/index.php?page=../../../../../../../../../etc/passwd'
Essa é a vulnerabilidade de LFI utilizando também a vulnerabilidade de Path Travessal.
(Um macete para quando tivermos um LFI é olhar os arquivos utilizando o código fonte, já que na pagina ele exibe sem a formatação que deveria ser feito com html).
Essa vulnerabilidade ocorre quando podemos ler um arquivo dentro do servidor, ou então podemos atravesar os diretorios de onde estão vindo as imagens, ou algo a mais que esteja sendo recarregado na aplicação e forçar vir um arquivo especifico de dentro do servidor.
------------------------------------------------------------------------------------
COMO IDENTIFICAR E COMO EXPLORAR ESSA VULNERABILIDADE? -> A primeira coisa para explorar essa vulnerabilidade é localizar onde ela se encontra e podemos fazer isso analisando as requisições feitas pelo Dev Tools do proprio navegador, com isso conseguimos ver no caso do nosso lab as requisições feitas para carregar as imagens. Algumas formas de testar é começar inserindo a nossa payload /etc/passwd nas requisições feitas através da imagem, devemos procurar um parametro dentro da aplicação que esteja vulneravel a esse tipo de ataque. No caso do nosso lab, o parametro id é vulneravel a esse tipo de ataque, então podemos explorar ele tenta acessar algum arquivo dentro do servidor.

POR QUE UTILIZAR O ARQUIVO /etc/passwd? -> Esse arquivo é o que informa quais os usuarios da máquina, sendo assim podemos analisar os usuarios que tem acesso a /bin/bash, esses usuarios tem acesso ao shell da máquina. Com esse arquivo, podemos ter o nome do usuario e consequentemente acessar sua pasta home, como no exemplo /home/masteruser.

ALGUNS ARQUIVOS INTERESSANTES PARA SE PEGAR UTIILZANDO ESSA VULNERABILIDADE -> Dentro da pasta dos usuarios, temos alguns arquivos interessantes que podemos ler para descobrir mais sobre o alvo. Um desses arquivos que podemos tentar ler é o .bash_history, que contém todos o historico de comandos utilizados pelo usuario. Também temos o bashrc, que é todo o historico dos alias do terminal e de configurações do bash. Tem o arquivo de ssh, que podemos tentar ler o arquivo id_rsa para podermos talvez tentar uma conexão via SSH.

Ao lermos o arquivo .bash_history do servidor, vimos que o usuario deu um cat num arquivo com a flag, acessando esse arquivo temos a nossa flag para resolver o lab dessa aula.
